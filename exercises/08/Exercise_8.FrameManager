{"number":"8","startingCode":"void setup()\n{\n  pinMode(2, OUTPUT); // Enables pin 2, 3, 4 on the Arduino to Send enough power to turn on a LED\n  pinMode(3, OUTPUT);\n  pinMode(4, OUTPUT);\n}\n\nvoid loop()\n{\n  int waitTime; // creates an integer waitTime\n  int count; // creates an integer count\n  waitTime = 400; // sets the value stored in waitTime\n  count = 1; // sets the value stored in count\n\n  while (count <= 4) // this while loop will repeat four times\n    // When count=1, count=2, count=3, count=4.\n    // this while loop ”stops” or “no longer loops” when count=5\n  {\n    digitalWrite(2, HIGH);\n    delay(waitTime);\n    digitalWrite(2, LOW);\n    delay(waitTime);\n    count = count + 1; // count gets the value of count + 1\n  }\n  delay(waitTime * 10); // wait 4000ms or 4 seconds before going to the next line\n}","suffix":"int main() {\n  setup();\n  loop();\n  return 0;\n}\n","board":{"type":"LED Board","setup":{"pinKeyframes":[]}},"frameManager":{"frames":[{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":1023},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":400,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":4000,"outputText":[]},{"ledModes":{"3":1,"4":1,"9":1},"ledStates":{"9":0},"postDelay":0,"outputText":[]}],"currentFrame":25,"elapsedTime":13600,"isGraded":false},"directions":"Exercise08: Count in a loop to blink 4 times.\n\nMake sure you have done the following before proceeding:\n\n1. Have watched video on while loops /files/1883896/Arduino_Tutorial_3_-_While_Loops(2).mp4\n2. Have looked at and understand while loop handout DPEA_Looping_With_While.pdf\n\nNEW: Multiple variables waitTime and count;\n\nDESCRIPTION: using multiple variables to control our program.\n\nNEW: while loop;\n\nDESCRIPTION: A way to repeat commands until a condition is no longer true.\n\nExample: The while loop will execute the code between the while loop parenthesis while the condition is true, then the while loop will end.\n\nNEW: count = count + 1;\n\nDESCRIPTION: This is NOT algebra – rather a short hand notation of:\n\n“count gets the value of count + 1”\n\nACTIVITIES:\n\n1. Copy the program from Starting Point Exercise08 into the Arduino IDE. \n2. Compile and upload this program to the Arduino and verify that LED 2 Blinks on and off 4 times with a delay of 400 milliseconds and then all LEDS are off for four seconds then everything starts over again.\n3. Modify the program so that it blinks LED 2 two times then waits four seconds instead of 4 times.\n4. Modify the program so that it blinks LED 9 twelve times then waits four seconds then everything starts over again.\n5. Save the completed sketch as YourInitials_Exercise08 in: Documents – Arduino – Exercises\n6. Copy the code into the Giffer website\n7. Enter your name and exercise number.\n8. Select the Run and Grade button.\n9. Look at the resulting Output image and make sure it is correct (Correct at lower part of image)\n10. If it is Correct - use theCopy Page button to copy the evidence that you have correctly completed the exercise to clipboard.\n11. Go to CL 10.3.08 Upload Completed Exercise08: And upload evidence that you have completed Exercise08\n12. Click \"Prepare an answer\" on NEO\n13. Click the \"<>\" (Source code) button.\n14. Paste by pressing CTRL + V\n15. Click \"Save and submit for grading\"\n16. If you made changes to the code in Giffer, then Copy the code from Giffer and paste it into the Arduino and re-save it as: YourInitials_Exercise08 - in your Documents/Arduino/Exercises Folder."}
