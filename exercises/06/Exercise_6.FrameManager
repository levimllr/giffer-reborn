{"number":"6","startingCode":"void setup()\n\n{\n\n  pinMode(2, OUTPUT);\n\n}\n\n\nvoid loop()\n\n{\n\n  int t; \n\n  t = 1000;\n\n\n  digitalWrite(2, HIGH);\n\n  delay(t);\n\n  digitalWrite(2, LOW);\n\n  delay(t); \n\n  digitalWrite(2, HIGH);\n\n  delay(t);\n\n  digitalWrite(2, LOW);\n\n  delay(t);\n\n  delay(4000);  // wait 4000ms or 4 seconds before going to the next line\n\n}","suffix":"int main() {\n  setup();\n  loop();\n  return 0;\n}\n","board":{"type":"LED Board","setup":{"pinKeyframes":[]}},"frameManager":{"frames":[{"ledModes":{"9":1},"ledStates":{"9":1023},"postDelay":200,"outputText":[]},{"ledModes":{"9":1},"ledStates":{"9":0},"postDelay":200,"outputText":[]},{"ledModes":{"9":1},"ledStates":{"9":1023},"postDelay":200,"outputText":[]},{"ledModes":{"9":1},"ledStates":{"9":0},"postDelay":200,"outputText":[]},{"ledModes":{"9":1},"ledStates":{"9":1023},"postDelay":200,"outputText":[]},{"ledModes":{"9":1},"ledStates":{"9":0},"postDelay":200,"outputText":[]},{"ledModes":{"9":1},"ledStates":{"9":1023},"postDelay":200,"outputText":[]},{"ledModes":{"9":1},"ledStates":{"9":0},"postDelay":4000,"outputText":[]},{"ledModes":{"9":1},"ledStates":{"9":0},"postDelay":0,"outputText":[]}],"currentFrame":8,"elapsedTime":5400,"isGraded":false},"directions":"Exercise06: Make an LED BLINK 2 times and use variables to control the time.\n \nNEW:  int waitTime;\nDESCRIPTION: Creating unique and meaningful variable names to help with identification and understanding. camelCase is the naming convention used with the Arduino.\n \nExamples of camelCase:  digitalWrite and pinMode. You should continue to use camelCase when creating variables to be consistent. Instead of using the variable names x or t (which are not very informative), create more descriptive variable names such as waitTime.\n \nNEW:  delay(t*4);\nDESCRIPTION: You can put algebraic expressions inside parenthesis and they will be evaluated. If \"t\" = \"1000\" This meand delay(1000*4); or delay(4000);.\nACTIVITIES:\n\n1. Copy the program from Starting Point Exercise05 into the Arduino IDE. \n2. Compile and upload this program to the Arduino and verify that LED 2 BLINKS ON and OFF for 1 second, TWO TIMES and then remains OFF for seconds then repeats the sequence over and over…..\n3. Modify the program by changing the variable name from t to waitTime. Compile and upload to verify that the program still works as before.…\n4. Modify the program by changing delay(4000); to delay(waitTime*4); Compile and upload to verify that the program still works as before...\n5. Modify the program so that LED 9 blinks four times, quickly using a 200 millisecond delay between on / off\n6. Save the completed sketch as YourInitials_Exercise06 in: Documents – Arduino – Exercises\n7. Copy the code into the Giffer website\n8. Enter your name and exercise number.\n9. Select the Run and Grade button.\n10. Look at the resulting Output image and make sure it is correct (Correct at lower part of image)\n11. If it is Correct -  use the Copy Page button to copy the evidence that you have correctly completed the exercise to clipboard.\n12. Go to CL 10.3.06 Upload Completed Exercise06:  And upload evidence that you have completed Exercise06\n13. Click \"Prepare an answer\" on NEO\n14. Click the \"<>\" (Source code) button.\n15. Paste by pressing CTRL + V\n16. Click \"Save and submit for grading\"\n17. If you made changes to the code in Giffer, then Copy the code from Giffer and paste it into the Arduino and re-save it as: YourInitials_Exercise06 - in your Documents/Arduino/Exercises Folder."}