{"number":"12",

"startingCode":"void setup()\n{\n  int ledNumber; // creates an integer ledNumber\n  ledNumber = 2; // sets the value stored in ledNumber\n  while (ledNumber <= 15) // this while loop will repeat fourteen times\n  { // Enables pin 2 – 15 on the Arduino to Send enough power to turn on a LED\n    pinMode(ledNumber, OUTPUT);\n    ledNumber = ledNumber + 1;\n  }\n}\nvoid loop()\n{\n  int ledNumber; // creates an integer ledNumber\n  ledNumber = 15; // sets the value stored in ledNumber\n  while (ledNumber >= 2) // this while loop will repeat fourteen times\n  { // this will turn on and off LED 15 through LED 2 with a 200ms delay between\n    digitalWrite(ledNumber, HIGH);\n    delay(200);\n    digitalWrite(ledNumber, LOW);\n    ledNumber = ledNumber - 1;     //  ledNumber gets the value of ledNumber – 1\n  }\n  delay(4000);\n}",

"suffix":"int main() {\n  setup();\n  loop();\n  return 0;\n}\n",

"board":{"type":"LED Board","setup":{"pinKeyframes":[]}},

"frameManager":{"frames":[{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"15":1023},"postDelay":200,"outputText":[]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"13":1023,"15":0},"postDelay":200,"outputText":[]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"11":1023,"13":0,"15":0},"postDelay":200,"outputText":[]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"9":1023,"11":0,"13":0,"15":0},"postDelay":200,"outputText":[]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"7":1023,"9":0,"11":0,"13":0,"15":0},"postDelay":200,"outputText":[]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"5":1023,"7":0,"9":0,"11":0,"13":0,"15":0},"postDelay":200,"outputText":[]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"3":1023,"5":0,"7":0,"9":0,"11":0,"13":0,"15":0},"postDelay":200,"outputText":[]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"3":0,"5":0,"7":0,"9":0,"11":0,"13":0,"15":0},"postDelay":4000,"outputText":[]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"ledStates":{"3":0,"5":0,"7":0,"9":0,"11":0,"13":0,"15":0},"postDelay":0,"outputText":[]}],"currentFrame":8,"elapsedTime":5400,"isGraded":false},

"directions":"**Exercise12: **Counting backwards using a \"while\" loop**.**\n\n\n\n**_NEW:_   ** _Decrementing x = x - 1;_****\n\n\n\n**_DESCRIPTION:_** **_**__**x gets the value of x – 1. Allows us to count down\ninstead of counting up._**\n\n\n\n**_Other valid options include:_**\n\n**__****x = x + 5; // x gets the value of x + 5**\n\n**_x = x - 5; // x gets the value of x – 5_**\n\n**__****x = x * 5; // x gets the value of x times 5**\n\n**_x = x / 5; // x gets the value of x divided by 5_**\n\n**_ACTIVITIES:_**\n\n  1. Copy the program from Starting Point Exercise12 into the Arduino IDE. \n  2. Compile and upload this program to the Arduino and verify that LED’s 15 through 2 blink on and off in order with a 200ms delay between each, then the program pauses for 4 seconds and the whole thing starts over again….\n  3. Modify the program so that only LED’s 15 through 9 blink on and off.\n  4. Modify the program so that only LED’s 8 through 2 blink on and off.\n  5. Modify the program so that only LED’s 15, 13, 11, 9, 7, 5, 3 blink on and off.\n  6. Save the completed sketch as YourInitials_Exercise12 in: Documents – Arduino – Exercises\n  7. Copy the code into the [Giffer](http://dpengineering.github.io/giffer-reborn/) website\n  8. Enter your  ** _name_**  and  ** _exercise number._**\n  9. Select the  ** _Run and Grade_** button.\n  10. Look at the resulting Output image and make sure it is correct ( **Correct**  at lower part of image)\n  11. If it is Correct -  use the ** **Copy Page**  button to copy the evidence that you have correctly completed the exercise to clipboard.\n  12. Go to  **CL 10.3.12 Upload Completed Exercise12** :  And upload evidence that you have completed Exercise12\n  13. **Click \" **Prepare an answer** \" on NEO\n  14. Click the \" **< >**\" ( _Source code_ ) button.\n  15. Paste by pressing **CTRL + V**\n  16. **Click** \" ** _Save and submit for grading_** \"\n  17. If you made changes to the code in Giffer, then Copy the code from Giffer and paste it into the Arduino and re-save it as:  _YourInitials_Exercise12 -_ in your  _Documents/Arduino/Exercises_  Folder.\n"}